1.先去网站下载，所需要的包。
    Username: michaelkang
    Password: OSslyuTi
    http://www.virtutech.com/asr/download

2.解压所有安装包，他们自己动解压到一个simics-4.0-install 目录下：
   $ tar xf simics-pkg-simics-base-4.0.0-linux.tar
   $ tar xf simics-pkg-firststeps-4.0.0-linux.tar
   $ ls simics-4.0-install

3.运行安装脚本：
   $ cd simics-4.0-install
   $ sudo ./install-simics.pl

4.进行安装配置：
1）Have you already signed a custom Simics Software License Agreement
with Virtutech? (y, n) [n]: y

2）Is your company located in one of the following areas: USA, Canada,
Japan, the European Union? (y, n): y

3）install-simics will now show you the Simics Software License Agreement
for Simics 4.0 (revision 1.0). You can also read or print this agreement
by opening the file ’SLA-1.0’ (in the current directory) in any text editor.
To continue with the installation and review the terms of the SLA, enter ’y’
To abort the installation, enter ’n’. (y, n) [y]: <ENTER>

4）Do you accept the terms of the SLA? (accept, decline) [decline]: accept

5）-> Looking for Simics packages in current directory...
Enter a decryption key for package-1000-4.0.0-linux.tar.gz.tf [Abort]: <ENTER>
0123456789ABCDEF0123456789ABCDEF
Enter a decryption key for package-4005-4.0.0-linux.tar.gz.tf [Abort]: <ENTER>
0123456789ABCDEF0123456789ABCDEF

6）install-simics can install the following packages from the current directory:
   Number  Name          Type    Version   Host       File
    1      Simics-Base   simics  4.0.0     x86-linux  package-1000-4.0.0-[...]
    2      Firststeps    addon   4.0.0     x86-linux  package-4005-4.0.0-[...]
    3      All packages
Please enter the numbers of the packages you want to install, as in "1 4 3"
Package numbers, or Enter to [Abort]: 3 
（注：如果要是把所有包全部解压后，这块可能不是3，但要选择 All packages）

7）Enter a destination directory for installation [/opt/virtutech/simics-4.0/]: <ENTER>

8）The following packages will be installed in /opt/virtutech/simics-4.0:
   simics-base-4.0.0-linux.tar.gz (Simics-Base 4.0.0)
   firststeps-4.0.0-linux.tar.gz (Firststeps 4.0.0)
Do you wish to perform the installation? (y, n) [y]: y
-> Testing simics-base-4.0.0-linux.tar.gz
-> Installing simics-base-4.0.0-linux.tar.gz
-> Testing firststeps-4.0.0-linux.tar.gz
-> Installing firststeps-4.0.0-linux.tar.gz

9）If you wish to, Simics can automatically install a license
file in your newly installed Simics.
Enter a license file name or Enter to [Skip]: simics-license.lic
-> Copying simics-license.lic to /opt/virtutech/simics-4.0//simics-4.0.0/licenses

10）install-simics has installed the following add-on package:
   Firststeps  4.0.0  /opt/virtutech/simics-4.0//simics-firststeps-4.0.0
Do you wish to make these add-on packages available in
Simics-Base 4.0.0? (y, n) [y]: <ENTER>
-> Making add-on package available in Simics-Base 4.0.0

5.安装license:
1.使用 lmutil hostid 查看本机的hostid.　看是那个网卡的地址。
2.使用ifconfig 更改该网卡MAC地址。注：网卡设备必须是eth0。
　$ ifconfig eth0 down
　$ ifconfig eth0 hw ether  00:1e:68:49:c4:7d
　$ ifconfig eth0 up
3.使用lmutil hostid 查看本机的hostid 是否和文件中的一致.
  $ cd /opt/virtutech/simics-4.0/simics-4.0.60/flexnet/amd64-linux/bin
  $ ./lmutil hostid
The FLEXnet host ID of this machine is "001e6849c47d"
  $ ./lmgrd -c simics_4_0.lic       启动license
  $ ./lmutil down                   关闭服务器

6.安装完成后生成工作目录:
  $ /opt/virtutech/simics-4.0/simics-4.0.0/bin/workspace-setup  simics-workspace
  $ cd simics-workspace
  $ ./simics-gui  

  安装后的目录:
  /opt/virtutech/simics-4.0/simics-4.0.0/bin/simics-gui

o simics user step to step:
--------------------------
示例中simics 的安装目录为/opt/simics-4.0/

1.建立工作目录work
/opt/simics-4.0/simics-4.0.62/bin/workspace-setup work 
2.进入目录
cd work
3.复制已有的模块（代码会被复制到module/sample-risc 目录中)
./bin/workspace-setup --copy-device=sample-risc
4.编译
make
5. 运行smple-risc 脚本
./simics targets/cosim/queues-in-cosimulator.simics
   
    其调用的脚本为（.simics文件中会看到调用过程) ：
    /opt/simics-4.0/simics-4.0.62/simics-model-builder-4.0.16/target/queues_in_cosimulator.py

    脚本的作用:
    1.创建的对象
    CPU: sampel_risc0
    Core: sample_core0 , sampel_core1
    image: ram_iamge0, ram_image1 (文档中有提到，还不太理解)
    ram: ram0, ram1
    memory-space: phy_mem0, test0      (可理解为总线映射的对象)
    cell: cosim_cell (simics的CPU调度时使用)
    device: sample_dev0, sample_dev1 .
    context: ctx0   (上下文的记录时使用，不用关心)

    2.属性间的赋值。 （可理解为对象结构体间的赋值和对象间的调用关系）   
    如:
    sample_risc0.sim_core = conf.sim
    sample_risc0.freq_mhz =  1.0

    sample_core0.sample_risc = sample_risc0
    sample_core0.physical_memory_space = phys_mem0
    sample_core0.current_context_obj = ctx0
    等号前为该对象的属性，在代码中可以看到。

    sample_core0.queue = sample_risc0
    queue可以理解为CPU和DEVICE 遵守的同一个时钟和时间队列。应该是simics管理，代码中没有该属性。
   
    注：该脚本内容可以按照每行手动输入，在命令前加＠即可。

6. 查看该模块
输入
simics>load-modules
可看到该模块被加载
如：
sample-risc                    Loaded  2504  2556   None          Yes   
_________________________________________________

命令行的使用 simics>
1. 属性的使用
    输入：
    simics>sample_core0->
    按table键 可看到其注册的属性。

    适用于其它实现的对象(sample_risc0, sampel_core0, phy_mem0, ctx0, ram0, image0等)。

2.状态的查看和注册命令的使用
    输入:
    simics>sample_core0.
    按table键 可看到状态查看命令和注册的命令
 
    适用于其它实现的对象(sample_risc0, sampel_core0, phy_mem0, ctx0, ram0, image0等)。

    如
    .list-interfaces
    .log-level
    .info
    .status

3. 一些simics 命令（详见simics reference manual 手册)
    load-file   
    load-binary
    run
    stop
    stepi
    step-cycle
    reverse
    log-level
    pregs
    disassemble
    print-event-queue
    set-pc
    reg-reg
    write-reg
    get address
    set address

4.测试bin 文件的运行。
    在附件中下载test.bin
    输入
    simics>load-file test.bin
    simics> run
    即可。

    test.bin实现了5条指令的循环执行。内容如下：
00:    20 00 00 04             // load 0x4 处的指令
04:    30 00 00 0c             //保存到0xc 处
08:    40 00 00 10             //cpu_idle 0x10   
0C:    10 00 00 00            //跳转指令，会被修改   
10:    10 00 00 00            // 跳转到0x0 处执行。

    可在toy-risc-core.c 　419行 指令实现的switch 结构中添加打印查看。
    指令结构的描述在toy-risc-core.c 35行的注解中.
 
